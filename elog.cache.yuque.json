{
  "docs": [
    {
      "id": 123208837,
      "doc_id": "notion-markdown",
      "title": "notion-markdown",
      "updated": 1682517236000,
      "body_original": "<a name=\"Notion-Markdown\"></a>\n# Notion-Markdown\n<a name=\"de6c6643\"></a>\n## 行内样式\n\n- [x] Blod（加粗）\n- [x] Italicize（斜体）\n- [x] Underline（中划线）\n- [ ] Strike-Through（删除线）返回`<u>`包裹的文本\n- [x] Mark as code（行内代码块）\n- [ ] Inline equation（行内公式）直接返回公式文本，部分博客平台可能会报错，推荐使用块级公式\n- [ ] Text Color（文字颜色）\n- [ ] Background Color（背景颜色）\n<a name=\"818ac306\"></a>\n## Basic block（基本块）\n\n- [x] Text（文本）\n- [ ] Page （页面）返回超链接，但是地址不完整\n- [x] To-do list（TODO）部分博客平台需要安装插件支持，例如 Vitepress\n- [x] Heading（标题）Notion 写作时最多显示 3 级标题，但是可以直接用`####`语法支持在支持更多级别的博客平台展示\n- [x] Table（表格）\n- [x] Bulleted list（无序列表）\n- [x] Numbered list（有序列表）\n- [x] Toggle list（折叠块）返回为`<detail>` Html 标签，在部分博客平台受支持\n- [x] Quote（引用）\n- [x] Divider（分割线）\n- [ ] Link to page（链接到页面）返回完整超链接，但是地址不完整\n- [x] Callout（标注）同 Quote（引用）\n<a name=\"6620ca65\"></a>\n## Media（媒体）\n\n- [x] Image（图片）\n- [x] Web bookmark（网页书签）返回完整超链接\n- [ ] VIdeo（视频）返回完整超链接\n- [ ] Audio（音频）不返回\n- [x] Code（代码）\n- [ ] File（文件）返回完整超链接\n<a name=\"162e6eee\"></a>\n## DataBase（数据库）\n返回数据库的超链接地址，但不完整\n<a name=\"0ef2e2f9\"></a>\n## AI block\nAPI 报错`Block type ai_block is not supported via the API.`不支持\n\n- [ ] Summary（摘要）\n- [ ] Action items（待办事项）\n- [ ] Custom AI Block（内容块）\n<a name=\"a5e7bd3a\"></a>\n## Advanced block（高级块）\n\n- [ ] Table of contents（目录）不返回\n- [x] Block equation（公式）返回代码块，部分博客平台支持\n- [ ] Button（按钮）不返回\n- [ ] Breadcrumb（导航栏）不返回\n- [x] Synced block（同步块）\n- [ ] Toggle heading（折叠标题）返回标题样式\n- [ ] columns（分栏）\n- [x] Code（mermaid 代码，用于流程图等）部分博客平台需安装插件支持\n- [ ] Mention a person（提及人员）\n- [x] Mention a page（提及页面）返回 Notion 完整超链接\n- [x] Date or reminder（日期或提醒）返回日期值\n- [x] Emoji（表情）\n- [ ] Inline equation（行内公式）返回公式文本，部分博客平台可能会报错，谨慎使用\n<a name=\"c120b25e\"></a>\n## Embeds（嵌入）\n返回为超链接\n",
      "properties": {
        "title": "Notion-Markdown",
        "urlname": "notion-markdown",
        "author": "1874",
        "date": "2023-04-26 13:51:50",
        "updated": "2023-04-26 13:53:56"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "功能和API适配情况",
          "uuid": "IRlxU8BN3QGe27pc",
          "url": "",
          "prev_uuid": "mqnrHmVyj2SptIu-",
          "sibling_uuid": "lyiqodb0OvCLERDP",
          "child_uuid": "I27Jt1Utz-2VDG-o",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    },
    {
      "id": 117967328,
      "doc_id": "yuque-markdown",
      "title": "yuque-markdown",
      "updated": 1682525252000,
      "body_original": "<a name=\"7798915c\"></a>\n# 语雀-Markdown\n<a name=\"0796ba76\"></a>\n## 基础\n\n- [x] 图片\n- [x] 表格\n- [ ] 附件【勉强可用】：接口返回为超链接形式，在hexo中展现形式为超链接，点击后触发下载\n- [ ] 状态【不可用】：接口返回为纯文字，在hexo中不支持，会直接渲染为文字\n<a name=\"de6c6643\"></a>\n## 行内样式\n\n- [x] 加粗\n- [x] 下划线\n- [x] 斜体\n- [x] 中划线\n- [x] 上/下标\n- [x] 行内代码\n- [ ] 字体颜色【不可用】\n- [ ] 字体背景色【不可用】\n- [x] 待办事项\n<a name=\"e57482b5\"></a>\n## 画板类\n接口不返回，解决方案就是画好之后截图放在画板下面\n\n- [ ] 画板【不可用】\n- [ ] 思维导图【不可用】\n- [ ] 流程图【不可用】\n<a name=\"e9273484\"></a>\n## 数据表\n\n- [ ] 数据表【不可用】\n- [ ] 画册【不可用】\n- [ ] 看板【不可用】\n<a name=\"cb1298c1\"></a>\n## 程序员专区\n\n- [x] 代码块\n- [x] 公式：接口返回为图片\n- [ ] UML图【不可用】：接口不返回，解决方案就是画好之后截图放在画板下面\n- [x] 文本绘图：接口返回为图片\n<a name=\"EGBp9\"></a>\n## 布局和样式\n\n- [ ] 高亮块【不可用】：接口返回为`:::info`等形式，部分博客平台支持\n- [ ] 折叠块【不可用】 接口直接返回折叠标题+折叠内容字符\n- [ ] 分栏卡片【不可用】 接口依次返回每个分栏的内容\n- [x] 引用\n- [x] 分割线\n- [x] 表情\n- [ ] 图册【不可用】：接口不返回\n<a name=\"2539c189\"></a>\n## 小工具\n\n- [ ] 用提及【勉强可用】 接口返回为超链接\n- [ ] 语雀内容【勉强可用】 接口返回为超链接\n- [ ] 日历【不可用】\n- [ ] 投票【不可用】\n- [ ] 打卡【不可用】\n- [ ] 加密文本【不可用】\n<a name=\"7686af95\"></a>\n## 嵌入本地内容\n\n- [ ] 本地文件 PDF Word Sketch等【勉强可用】：接口返回为超链接\n- [ ] 本地音频【不可用】：接口不返回\n- [ ] 本地视频【不可用】：接口返回为视频超链接形式\n<a name=\"c93690b0\"></a>\n## 第三方服务\n所有嵌入的第三方服务，接口返回形式都为超链接，点击后前往目标页面\n\n- [ ] 用优酷【勉强可用】\n- [ ] B站【勉强可用】\n- [ ] 网易云【勉强可用】\n- [ ] 淘宝【勉强可用】\n- [ ] Figma【勉强可用】\n- [ ] ProcessOn【勉强可用】\n- [ ] Canva【勉强可用】\n- [ ] CodePen【勉强可用】\n- [ ] 码上掘金【勉强可用】\n",
      "properties": {
        "title": "语雀-Markdown",
        "urlname": "yuque-markdown",
        "author": "1874",
        "date": "2023-03-14 13:10:45",
        "updated": "2023-04-26 16:07:32"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "功能和API适配情况",
          "uuid": "IRlxU8BN3QGe27pc",
          "url": "",
          "prev_uuid": "mqnrHmVyj2SptIu-",
          "sibling_uuid": "lyiqodb0OvCLERDP",
          "child_uuid": "I27Jt1Utz-2VDG-o",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    },
    {
      "id": 122903274,
      "doc_id": "notion-example",
      "title": "notion-example",
      "updated": 1682314437000,
      "body_original": "<a name=\"jcE5l\"></a>\n# Notion示例文章\n[点击查看Notion示例文章](/notion/notion-example)\n",
      "properties": {
        "title": "Notion示例文章",
        "urlname": "notion-example",
        "author": "1874",
        "date": "2023-04-24 05:08:29",
        "updated": "2023-04-24 05:33:57"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "功能和API适配情况",
          "uuid": "IRlxU8BN3QGe27pc",
          "url": "",
          "prev_uuid": "mqnrHmVyj2SptIu-",
          "sibling_uuid": "lyiqodb0OvCLERDP",
          "child_uuid": "I27Jt1Utz-2VDG-o",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    },
    {
      "id": 122903263,
      "doc_id": "yuque-example",
      "title": "yuque-example",
      "updated": 1683126654000,
      "body_original": "<a name=\"lGePd\"></a>\n# 语雀示例文章\n[语雀示例文章源地址](https://www.yuque.com/1874w/elog-docs/yuque-example)\n<a name=\"bW1mg\"></a>\n## 基础\n<a name=\"p065X\"></a>\n### 1.图片\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1682313146385-a61870b7-6a26-45a5-977f-983a5317746f.png#averageHue=%232e2a33&clientId=u565efaa1-1a26-4&from=paste&height=476&id=udf8b9804&originHeight=951&originWidth=1224&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1223211&status=done&style=none&taskId=u75cb95e1-3118-47ca-9896-a2e0fe29fb1&title=&width=612)\n<a name=\"GELgv\"></a>\n### 2.表格\n| 字段 | 备注 |\n| --- | --- |\n| name | 名称 |\n| age | 年龄 |\n\n<a name=\"IQ8hL\"></a>\n### 3.附件\n[测试文本1.docx](https://www.yuque.com/attachments/yuque/0/2023/docx/417081/1682313230716-53b82e84-4ed2-43b1-b543-a6c779ebe570.docx?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2023%2Fdocx%2F417081%2F1682313230716-53b82e84-4ed2-43b1-b543-a6c779ebe570.docx%22%2C%22name%22%3A%22%E6%B5%8B%E8%AF%95%E6%96%87%E6%9C%AC1.docx%22%2C%22size%22%3A10060%2C%22ext%22%3A%22docx%22%2C%22source%22%3A%22%22%2C%22status%22%3A%22done%22%2C%22download%22%3Atrue%2C%22taskId%22%3A%22u24ca3c10-e87b-4a0d-8dca-76a86e87504%22%2C%22taskType%22%3A%22transfer%22%2C%22type%22%3A%22application%2Fvnd.openxmlformats-officedocument.wordprocessingml.document%22%2C%22mode%22%3A%22title%22%2C%22id%22%3A%22ob2DF%22%2C%22card%22%3A%22file%22%7D)\n<a name=\"LAvTF\"></a>\n### 4.状态\n计划中<br />未完成<br />已完成\n<a name=\"MyZ1F\"></a>\n## 布局和样式\n<a name=\"rQ6Yu\"></a>\n### 1.高亮块\n:::info\n蓝色背景高亮块\n:::\n<a name=\"PS8f5\"></a>\n### 2.折叠块\n折叠标题折叠内容\n<a name=\"IKTlQ\"></a>\n### 3.分栏卡片\n两列分栏——左<br />![头像1.PNG](https://cdn.nlark.com/yuque/0/2023/png/417081/1677163708621-96cc61e3-c459-4880-8559-b10640d74d2a.png#averageHue=%23101010&clientId=ueca6d211-0f08-4&from=ui&id=u2927bb30&originHeight=999&originWidth=998&originalType=binary&ratio=2&rotation=0&showTitle=false&size=126094&status=done&style=none&taskId=uce5867a8-0d86-4095-9d1c-51f698ae363&title=)<br />两列分栏——右\n```typescript\nconst a = 1\n```\n\n<a name=\"DU1HZ\"></a>\n### 4.引用\n> 引用文本第一行\n> 引用文本第二行\n> 引用文本第三行\n\n<a name=\"A7wKX\"></a>\n### 5.分割线\n\n---\n\n<a name=\"cU4aC\"></a>\n### 6.表情\n😃 🤪\n<a name=\"nF159\"></a>\n## 画板类\n<a name=\"lz0xX\"></a>\n### 1.画板\n<a name=\"IQBzE\"></a>\n### 2.思维导图\n<a name=\"CmCbi\"></a>\n### 3.流程图\n<a name=\"o2eL5\"></a>\n## 数据表\n<a name=\"UcnxX\"></a>\n## 程序员专区\n<a name=\"P9lz8\"></a>\n### 1.代码块\n```typescript\n// TypeScript\nconst test = (post: DocDetail) => {\n\tconst newPost = process(post)\n  return newPost\n}\nexport default test\n```\n```java\n// Java\n@Test\npublic void test11() {\n    long start = System.currentTimeMillis();\n    int a = 0;\n    for(int i=0;i<1000000000;i++){\n        try {\n            a++;\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }\n    long useTime = System.currentTimeMillis()-start;\n    System.out.println(\"useTime:\"+useTime);\n}\n```\n<a name=\"ZjffF\"></a>\n### 2.公式\n![](https://cdn.nlark.com/yuque/__latex/146ac92b6071bbb19ade94ed5065f040.svg#card=math&code=%5Csum_%7Bi%3D0%7D%5En%20i%5E2%20%3D%20%5Cfrac%7B%28n%5E2%2Bn%29%282n%2B1%29%7D%7B6%7D&id=tATid)\n<a name=\"dUMZ6\"></a>\n### 3.UML图\n<a name=\"utOA6\"></a>\n### 4.文本绘图\n![](https://cdn.nlark.com/yuque/__puml/b11b6192390c95750c4b71c2580ff529.svg#lake_card_v2=eyJ0eXBlIjoicHVtbCIsImNvZGUiOiJAc3RhcnR1bWxcblxuYXV0b251bWJlclxuXG5hY3RvciBcIueUqOaIt1wiIGFzIFVzZXJcbnBhcnRpY2lwYW50IFwi5rWP6KeI5ZmoXCIgYXMgQnJvd3NlclxucGFydGljaXBhbnQgXCLmnI3liqHnq69cIiBhcyBTZXJ2ZXIgI29yYW5nZVxuXG5hY3RpdmF0ZSBVc2VyXG5cblVzZXIgLT4gQnJvd3Nlcjog6L6T5YWlIFVSTFxuYWN0aXZhdGUgQnJvd3NlclxuXG5Ccm93c2VyIC0-IFNlcnZlcjog6K-35rGC5pyN5Yqh5ZmoXG5hY3RpdmF0ZSBTZXJ2ZXJcblxuU2VydmVyIC0-IFNlcnZlcjog5qih5p2_5riy5p-TXG5ub3RlIHJpZ2h0IG9mIFNlcnZlcjog6L-Z5piv5LiA5Liq5rOo6YeKXG5cblNlcnZlciAtPiBCcm93c2VyOiDov5Tlm54gSFRNTFxuZGVhY3RpdmF0ZSBTZXJ2ZXJcblxuQnJvd3NlciAtLT4gVXNlclxuXG5AZW5kdW1sIiwidXJsIjoiaHR0cHM6Ly9jZG4ubmxhcmsuY29tL3l1cXVlL19fcHVtbC9iMTFiNjE5MjM5MGM5NTc1MGM0YjcxYzI1ODBmZjUyOS5zdmciLCJpZCI6IkN4QjBXIiwibWFyZ2luIjp7InRvcCI6dHJ1ZSwiYm90dG9tIjp0cnVlfSwiY2FyZCI6ImRpYWdyYW0ifQ==)<a name=\"vishw\"></a>\n## 小工具\n<a name=\"BlMd0\"></a>\n### 1.提及\n[@1874(1874w)](/1874w)\n<a name=\"Bkh2F\"></a>\n### 2.内嵌语雀内容\n[快速开始](https://www.yuque.com/1874w/elog-docs/start?view=doc_embed)\n<a name=\"uYDIV\"></a>\n### 3.日历\n<a name=\"pZpXN\"></a>\n### 4.投票\n<a name=\"PoGLi\"></a>\n### 5.打卡\n<a name=\"vbpVQ\"></a>\n### 6.加密文本\n<a name=\"HX79E\"></a>\n## 嵌入本地内容\n<a name=\"Vg5eR\"></a>\n### 1.本地文件\n[测试文本1.docx](https://www.yuque.com/attachments/yuque/0/2023/docx/417081/1682314054798-ed371f99-e207-4386-a763-c3f9926f2511.docx)\n<a name=\"o9Z6p\"></a>\n### 2.本地音频\n<a name=\"HMZVE\"></a>\n### 3.本地视频\n[![46_1677164223.mp4 (139.39KB)](https://gw.alipayobjects.com/mdn/prod_resou/afts/img/A*NNs6TKOR3isAAAAAAAAAAABkARQnAQ)](https://www.yuque.com/1874w/elog-docs/yuque-example?_lake_card=%7B%22status%22%3A%22done%22%2C%22name%22%3A%2246_1677164223.mp4%22%2C%22size%22%3A142733%2C%22taskId%22%3A%22ucf50b322-2e8f-4f86-9c03-a6fbc24de1f%22%2C%22taskType%22%3A%22upload%22%2C%22url%22%3Anull%2C%22cover%22%3Anull%2C%22videoId%22%3A%22inputs%2Fprod%2Fyuque%2F2023%2F417081%2Fmp4%2F1677164249140-0d3664bb-e160-4855-a991-c3f63ced0d66.mp4%22%2C%22download%22%3Afalse%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22zSBKg%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22card%22%3A%22video%22%7D#zSBKg)<a name=\"Sji98\"></a>\n## 第三方服务\n<a name=\"wZcsn\"></a>\n### 1.优酷\n[点击查看【youku】](https://player.youku.com/embed/XNDc1NDU1MTQwOA==)\n<a name=\"gDb5K\"></a>\n### 2.B站\n[点击查看【bilibili】](https://player.bilibili.com/player.html?aid=55895675)\n<a name=\"RoeCL\"></a>\n### 3.网易云\n[点击查看【music163】](https://music.163.com/outchain/player?type=2&id=1420830402&auto=0&height=66)\n<a name=\"l7yLA\"></a>\n### 4.ProcessOn\n[点击查看【processon】](https://www.processon.com/embed/5d006c43e4b071ad5a206ed2)\n<a name=\"x8mjU\"></a>\n### 5.Canva\n[点击查看【canva】](https://www.canva.cn/design/DAFbZ8rE5T4/view?embed)\n<a name=\"e3bn9\"></a>\n### 6.CodePen\n[点击查看【codepen】](https://codepen.io/afc163-1472555193/embed/oNXqWGP)\n<a name=\"glpJD\"></a>\n### 7.码上掘金\n[点击查看【juejin】](https://code.juejin.cn/pen/7111233570496053255?embed=true)\n",
      "properties": {
        "title": "语雀示例文章",
        "urlname": "yuque-example",
        "author": "1874",
        "date": "2023-04-24 05:08:11",
        "updated": "2023-05-03 15:10:54"
      },
      "catalog": [
        {
          "title": "功能和API适配情况",
          "doc_id": "yuque-example"
        }
      ],
      "body": ""
    },
    {
      "id": 114442049,
      "doc_id": "vy55q9xwlqlsfrvk",
      "title": "vy55q9xwlqlsfrvk",
      "updated": 1682100366000,
      "body_original": "<a name=\"FllTe\"></a>\n# 持续集成\n文档建设中...\n",
      "properties": {
        "title": "持续集成",
        "urlname": "vy55q9xwlqlsfrvk",
        "author": "1874",
        "date": "2023-02-14 05:06:31",
        "updated": "2023-04-21 18:06:06"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "进阶玩法",
          "uuid": "lyiqodb0OvCLERDP",
          "url": "",
          "prev_uuid": "IRlxU8BN3QGe27pc",
          "sibling_uuid": "M8ZIXs2Fu5_wwl7x",
          "child_uuid": "PodABt8fdN6YOzWq",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    },
    {
      "id": 113938704,
      "doc_id": "ubcut43kgf97fag6",
      "title": "ubcut43kgf97fag6",
      "updated": 1683194890000,
      "body_original": "<a name=\"pz1HM\"></a>\n# 最佳实践\n本篇收录了社区用户的实践项目。<br />**如何贡献**<br />欢迎各位使用者贡献搭建经验文档。可以通过以下步骤进行贡献、引流、讨论、共同成长：\n\n1. 使用Elog部署自己的博客，并提供完整的记录文档\n2. [提交Issues](https://github.com/LetTTGACO/elog/issues/2)\n<a name=\"PIHoF\"></a>\n## 最佳实践\n<a name=\"qckLB\"></a>\n### Elog Doc 多写作平台云端写作 + vitepress 按目录生成路由 + Github Action + Github Pages 持续集成\n作者：1874<br />网站: [https://elog.1874.cool](https://elog.1874.cool)<br />Github: [https://github.com/LetTTGACO/elog-docs](https://github.com/LetTTGACO/elog-docs)\n",
      "properties": {
        "title": "最佳实践",
        "urlname": "ubcut43kgf97fag6",
        "author": "1874",
        "date": "2023-02-09 07:56:35",
        "updated": "2023-05-04 10:08:10"
      },
      "catalog": [
        {
          "title": "社区生态",
          "doc_id": "ubcut43kgf97fag6"
        }
      ],
      "body": ""
    },
    {
      "id": 113927217,
      "doc_id": "te7ash7ybckgi60w",
      "title": "te7ash7ybckgi60w",
      "updated": 1682098399000,
      "body_original": "<a name=\"SOzjj\"></a>\n# 示例配置\n[Elog Docs Github](https://github.com/LetTTGACO/elog-docs)\n",
      "properties": {
        "title": "示例配置",
        "urlname": "te7ash7ybckgi60w",
        "author": "1874",
        "date": "2023-02-09 07:10:18",
        "updated": "2023-04-21 17:33:19"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "入门指引",
          "uuid": "mqnrHmVyj2SptIu-",
          "url": "",
          "prev_uuid": "5Z1oRyzOg4duQnlJ",
          "sibling_uuid": "IRlxU8BN3QGe27pc",
          "child_uuid": "bYYqP0FNnLjeZlYM",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    },
    {
      "id": 113693555,
      "doc_id": "bry3d3lwe206xuor",
      "title": "bry3d3lwe206xuor",
      "updated": 1682268307000,
      "body_original": "<a name=\"LF8JJ\"></a>\n# CLI命令\n<a name=\"S9WUA\"></a>\n## init\n初始化Elog配置\n```bash\nelog init [option] [value]\n```\n| option | alias | 说明 | 默认值 |\n| --- | --- | --- | --- |\n| --config | -c | 自定义配置文件的名称 | elog.config.js |\n| --env | -e | 自定义缓存文件的名称 | elog.cache.json |\n\n<a name=\"pVMaD\"></a>\n## sync\n同步文章\n```bash\nelog sync [option] [value]\n```\n| option | alias | 说明 | 默认值 |\n| --- | --- | --- | --- |\n| --env | -e | 指定环境文件path | - |\n| --config | -c | 指定配置文件path | elog.config.js |\n| --cache | -a | 指定缓存文件path | elog.cache.json |\n\n<a name=\"zq07D\"></a>\n## clean\n清理文章、上次同步缓存、上次同步时间\n```bash\nelog clean [option] [value]\n```\n| option | alias | 说明 | 默认值 |\n| --- | --- | --- | --- |\n| --config | -c | 指定配置文件path，用于读取存储文章目录 | elog.config.js |\n| --cache | -a | 指定缓存文件path | elog.cache.json |\n\n<a name=\"mHpZU\"></a>\n## upgrade\n更新全局 `elog` 版本到 `latest` 版本\n> v0.0.5 以上版本支持。\n\n```bash\nelog upgrade\n```\n",
      "properties": {
        "title": "CLI 命令",
        "urlname": "bry3d3lwe206xuor",
        "author": "1874",
        "date": "2023-02-07 14:16:56",
        "updated": "2023-04-23 16:45:07"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "入门指引",
          "uuid": "mqnrHmVyj2SptIu-",
          "url": "",
          "prev_uuid": "5Z1oRyzOg4duQnlJ",
          "sibling_uuid": "IRlxU8BN3QGe27pc",
          "child_uuid": "bYYqP0FNnLjeZlYM",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    },
    {
      "id": 113891385,
      "doc_id": "raqyleng501h23p1",
      "title": "raqyleng501h23p1",
      "updated": 1682100083000,
      "body_original": "<a name=\"IBvzr\"></a>\n# Front Matter\nElog 会将用户自定义的 front matter 和 预定义属性合并后，输出新的带有 front matter 的 markdown 文档。<br />任何包含 YAML front matter 的 Markdown 文件都将由 [front-matter ](https://www.npmjs.com/package/front-matter)处理。front matter 必须是 markdown 文件中的第一部分，并且必须采用在三点划线之间书写的有效的 YAML。 这是一个基本的例子：\n```json\n---\ntitle: Blogging with Elog\nclassify: 关于Elog\ndescription: 描述\ncover_img: https://example.com/test.jpg\ntags:\n- Blog\n- CI/CD\n---\n```\n> 手动指定文档的 `front matter` 只适用于语雀，Notion可以直接添加数据库属性，不需要手动指定 `front matter`。\n> 由于语雀 API 的问题，Elog 目前只支持使用三点划线来声明 `front matter`\n> 如果需要生成的 markdown 文件具有 `front matter`，需要在配置文件中配置`deploy.local.format=matter-markdown`\n\n<a name=\"ayVoq\"></a>\n## 预定义属性\nElog 预设置了一些常用的属性，会在`matter-markdown`模式默认下生成包含这些属性的markdown 文档。\n\n| 属性 | 说明 |\n| --- | --- |\n| title | 文章标题 |\n| urlname\u0000 | url名称 |\n| author\u0000 | 作者（仅限语雀） |\n| date\u0000 | 创建时间 |\n| updated\u0000 | 更新时间 |\n\n",
      "properties": {
        "title": "Front Matter",
        "urlname": "raqyleng501h23p1",
        "author": "1874",
        "date": "2023-02-09 03:31:45",
        "updated": "2023-04-21 18:01:23"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "进阶玩法",
          "uuid": "lyiqodb0OvCLERDP",
          "url": "",
          "prev_uuid": "IRlxU8BN3QGe27pc",
          "sibling_uuid": "M8ZIXs2Fu5_wwl7x",
          "child_uuid": "PodABt8fdN6YOzWq",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    },
    {
      "id": 113906683,
      "doc_id": "gvnxobqogetukays",
      "title": "gvnxobqogetukays",
      "updated": 1682335245000,
      "body_original": "<a name=\"CLb3k\"></a>\n# 关键信息获取\n<a name=\"PuDQA\"></a>\n## 语雀\n<a name=\"J7h6W\"></a>\n### login\n语雀个人路径。访问[工作台](https://www.yuque.com/dashboard) => 账户设置 => 账户设置 => 个人路径，设置语雀的简易的个人路径（建议），拿到个人路径。<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675921396045-39b578cc-8c43-45df-88ef-1942677e308d.png#averageHue=%239e9d9d&clientId=u75734ed0-2c7f-4&from=paste&height=429&id=u168b9780&originHeight=857&originWidth=1500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=107439&status=done&style=none&taskId=u331e7208-783d-4bbe-a832-380debd7348&title=&width=750)\n<a name=\"OUPKp\"></a>\n### repo\n语雀仓库短名称，也称为语雀知识库路径。访问需要作为博客文章的知识库 => 更多设置 => 知识库信息，拿到语雀知识库路径。<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675921478344-4dd32a74-6754-477f-89e3-ff1ea34c0962.png#averageHue=%23fbfafa&clientId=u75734ed0-2c7f-4&from=paste&height=280&id=uf65001e5&originHeight=559&originWidth=1500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=100393&status=done&style=none&taskId=u71a3faa4-6cbd-436b-a277-451b1b5423e&title=&width=750)<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675921492977-3cd96f47-b178-4a7a-be71-ab546d96f0c6.png#averageHue=%23fcfbfb&clientId=u75734ed0-2c7f-4&from=paste&height=492&id=ud53d8744&originHeight=984&originWidth=1700&originalType=binary&ratio=1&rotation=0&showTitle=false&size=93384&status=done&style=none&taskId=u53d916b1-0bda-4a4f-8552-501434c4cc4&title=&width=850)\n<a name=\"GZjjs\"></a>\n### token\n语雀Token，访问[工作台](https://www.yuque.com/dashboard) => 账户设置 => Token => 新建token并配置好只读权限。Access Token即为语雀Token。<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675921682840-95418c10-f4ed-4ca7-a550-b9eef2bd6e47.png#averageHue=%23f6f6f6&clientId=u75734ed0-2c7f-4&from=paste&height=627&id=u2530f761&originHeight=1253&originWidth=1500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=166802&status=done&style=none&taskId=u53224249-0282-4767-83ac-d28696d1b48&title=&width=750)\n<a name=\"elZJj\"></a>\n## Notion\n<a name=\"V14bz\"></a>\n### 配置流程\n\n1. 使用 [Database 模板](https://1874.notion.site/09ff9e1e141744c6af0a1f69d2a3d834?v=a09065f9266446afa745b475044daca6) 创建一个数据库\n2. 创建 Integration Token，具体请参考 [Notion 官方教程](https://developers.notion.com/docs/create-a-notion-integration#step-1-create-an-integration)\n3. 将复制的数据库连接到刚创建的 Integration，具体请参考 [Notion 官方教程](https://developers.notion.com/docs/create-a-notion-integration#step-2-share-a-database-with-your-integration)\n4. 获取数据库 DatabaseId\n<a name=\"avtRY\"></a>\n### token\n参考 [Notion 官方教程](https://developers.notion.com/docs/getting-started#step-1-create-an-integration) 。登录 [Niton网页版](https://www.notion.so/) => 访问 [My integrations](https://www.notion.so/my-integrations) => 创建应用 => 生成 Internal Integration Token<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675922454307-804f4775-a7a2-472b-b261-ac54f55e319f.png#averageHue=%23fbf9f7&clientId=u77e5771c-bb66-4&from=paste&height=603&id=u6683bd10&originHeight=1206&originWidth=2294&originalType=binary&ratio=1&rotation=0&showTitle=false&size=231034&status=done&style=none&taskId=u33b6f0f9-1170-43cb-96d8-37b4d5a5f5a&title=&width=1147)\n<a name=\"noDko\"></a>\n### databaseId\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1676350904981-0b035282-20c9-48f7-929e-e57707361905.png#averageHue=%23dedbd7&clientId=ue1e2d7f1-d2ee-4&from=paste&height=64&id=ud499e74e&originHeight=128&originWidth=1502&originalType=binary&ratio=2&rotation=0&showTitle=false&size=27860&status=done&style=none&taskId=u46452ea1-0523-4dd1-bcae-e94a6b5f900&title=&width=751)\n<a name=\"IJwx2\"></a>\n## 图床\n<a name=\"YLaGI\"></a>\n### Github\n<a name=\"NjkDy\"></a>\n#### token\nGithub访问Token。访问 [GIthub Token配置](https://github.com/settings/tokens/) => Generate new token => 勾选必要的参数，生成token。<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675923611571-43ba9386-5dc7-41ea-b182-56be09604e9f.png#averageHue=%23fefefe&clientId=ue137f57e-d208-4&from=paste&height=671&id=u143a5e24&originHeight=1342&originWidth=2298&originalType=binary&ratio=1&rotation=0&showTitle=false&size=322752&status=done&style=none&taskId=udd647308-e1fe-483e-b81f-645abac0075&title=&width=1149)\n<a name=\"oBdWz\"></a>\n### 腾讯云\n<a name=\"y2iQl\"></a>\n#### secretId/secretKey\n进入[访问管理](https://console.cloud.tencent.com/cam/overview) => [密钥管理](https://console.cloud.tencent.com/cam/capi) =>【新增密钥】=> 获取 SecretId 和 SecretKey<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675923762303-1e592c9d-4677-4e1b-8d1d-ffe2605eaa46.png#averageHue=%234a965b&clientId=ue137f57e-d208-4&from=paste&height=378&id=u845abe08&originHeight=755&originWidth=1500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=202973&status=done&style=none&taskId=ubff59a0c-fce3-4ae3-a916-58f97623802&title=&width=750)\n<a name=\"tg2n1\"></a>\n#### bucket/region\n访问[腾讯云COS管理](https://console.cloud.tencent.com/cos/bucket)获取\n<a name=\"vjk8e\"></a>\n### 阿里云\n<a name=\"f0C2i\"></a>\n#### secretId/secretKey\n访问[阿里云密钥管理](https://ram.console.aliyun.com/manage/ak) => 【创建AccessKey】 => 获取 AccessKey ID 和AccessKey\tSecret<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675924126786-1f159ec5-39d7-440b-994f-e1fe5fe9d9cb.png#averageHue=%23ed9c63&clientId=ue137f57e-d208-4&from=paste&height=503&id=uad50cbdb&originHeight=1006&originWidth=2636&originalType=binary&ratio=1&rotation=0&showTitle=false&size=200100&status=done&style=none&taskId=u73155de1-543f-4306-9187-a5dc08f76af&title=&width=1318)\n<a name=\"GT2O1\"></a>\n#### bucket\n访问[阿里云Bucket管理](https://oss.console.aliyun.com/bucket) => 获取 bucket\n<a name=\"YH3MF\"></a>\n#### region\n访问[阿里云Bucket管理](https://oss.console.aliyun.com/bucket) => 查看图床Bucket所在的地域 => 对照[常用Region](https://help.aliyun.com/document_detail/140601.html) => 获取Region Id\n> 根据[阿里云的开发文档](https://help.aliyun.com/document_detail/111265.htm#concept-uxl-2vb-dhb)，对象存储的region为 oss- 开头，所以需要给region id前面拼接上 oss- 才是完整的region\n\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675925859771-08faf26a-0276-4d84-aaf3-fdf0a534ee44.png#averageHue=%23f6f5f5&clientId=ue137f57e-d208-4&from=paste&height=214&id=u860703bd&originHeight=428&originWidth=1592&originalType=binary&ratio=1&rotation=0&showTitle=false&size=117256&status=done&style=none&taskId=u39a1070b-d69e-494a-9226-eda6fa8d97a&title=&width=796)\n<a name=\"WanE6\"></a>\n### 七牛云\n<a name=\"bAXoj\"></a>\n#### secretId/secretKey\n访问[七牛云密钥管理](https://portal.qiniu.com/user/key) => 【创建密钥】 => 获取 AccessKey/SecretKey<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675924265403-400c4c84-471b-4c9e-ba54-7234269a52b3.png#averageHue=%23fcfcfb&clientId=ue137f57e-d208-4&from=paste&height=522&id=uc59e4b35&originHeight=1044&originWidth=2702&originalType=binary&ratio=1&rotation=0&showTitle=false&size=174604&status=done&style=none&taskId=ua942d762-bf0f-4d0a-ab8b-9add94388a1&title=&width=1351)\n<a name=\"ZsT7G\"></a>\n#### bucket\n存储空间名称。访问[七牛云空间管理](https://portal.qiniu.com/kodo/bucket)获取\n<a name=\"TQNQI\"></a>\n#### region\n存储地域。[存储区域 - 七牛开发者中心](https://developer.qiniu.com/kodo/1671/region-endpoint-fq)\n<a name=\"xtyAa\"></a>\n### 又拍云\n<a name=\"Khw3L\"></a>\n#### user/password\n访问[又拍云操作员管理](https://console.upyun.com/account/operators/) => 【添加操作员】 => 获取 user/password<br />![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1675924454411-9f7718b6-95b1-468c-902a-3094861160c4.png#averageHue=%23db6346&clientId=ue137f57e-d208-4&from=paste&height=556&id=uee1d4f2a&originHeight=1112&originWidth=2380&originalType=binary&ratio=1&rotation=0&showTitle=false&size=142047&status=done&style=none&taskId=uaf3a1da0-c11b-4fa4-9bcf-fbb9b078ba6&title=&width=1190)\n<a name=\"YGBoW\"></a>\n#### bucket/region\n又拍云没有bucket和region的概念，只有服务名。bucket = 服务名，region不需要填写。访问[又拍云云存储](https://console.upyun.com/services/file/)获取服务名\n\n\n",
      "properties": {
        "title": "关键信息获取",
        "urlname": "gvnxobqogetukays",
        "author": "1874",
        "date": "2023-02-09 05:32:10",
        "updated": "2023-04-24 11:20:45"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "入门指引",
          "uuid": "mqnrHmVyj2SptIu-",
          "url": "",
          "prev_uuid": "5Z1oRyzOg4duQnlJ",
          "sibling_uuid": "IRlxU8BN3QGe27pc",
          "child_uuid": "bYYqP0FNnLjeZlYM",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    },
    {
      "id": 113665139,
      "doc_id": "zuzvbv2lqhvllgit",
      "title": "zuzvbv2lqhvllgit",
      "updated": 1683129945000,
      "body_original": "<a name=\"R6fm0\"></a>\n# Features\n- [x] 写作平台支持语雀/Notion\n- [x] 部署平台支持所有通过渲染本地 Markdown 文档生成静态站点的博客平台\n- [x] 支持按目录进行分类\n- [x] 支持生成带有 Front Matter 的 Markdown 文档\n- [x] 支持生成 HTML文档，并支持代码高亮（暂只支持语雀）\n- [x] 支持生成 wiki 文档（适用于Confluence）\n- [x] 支持自定义文档处理适配器\n- [x] 图片支持存放到本地\n- [x] 图片支持上传到阿里云/腾讯云/Github/七牛云/又拍云\n- [x] 图床支持通过拓展点注入密钥\n- [x] 支持同步到 Confluence （企业需求）\n- [ ] Elog Vscode插件（即将支持）\n\n更多详情见 [ELog 开发计划](https://1874.notion.site/Elog-91dd2037c9c847e6bc90b712b124189c)\n",
      "properties": {
        "title": "Features",
        "urlname": "zuzvbv2lqhvllgit",
        "author": "1874",
        "date": "2023-02-07 09:42:12",
        "updated": "2023-05-03 16:05:45"
      },
      "catalog": [
        {
          "title": "关于Elog",
          "doc_id": "zuzvbv2lqhvllgit"
        }
      ],
      "body": ""
    },
    {
      "id": 113663948,
      "doc_id": "la9toqncox96kfp8",
      "title": "la9toqncox96kfp8",
      "updated": 1680684696000,
      "body_original": "<a name=\"NWmnw\"></a>\n# 沟通与反馈\n<a name=\"eFdJw\"></a>\n## 使用交流\n微信/企业微信扫码加入交流群<br />![IMG_1672.PNG](https://cdn.nlark.com/yuque/0/2023/png/417081/1675927304419-1b16dc80-b970-4f52-9d87-320ead9b7011.png#averageHue=%23fdc671&clientId=u846cd10d-517c-4&from=drop&height=325&id=u4f6757ee&originHeight=396&originWidth=396&originalType=binary&ratio=1&rotation=0&showTitle=false&size=68966&status=done&style=none&taskId=ue4537a18-530c-4606-b554-74e609332b3&title=&width=325)\n<a name=\"viUZW\"></a>\n## 问题反馈与建议\n可以前往 [Github Issues](https://github.com/LetTTGACO/elog/issues)\n\n",
      "properties": {
        "title": "沟通与反馈",
        "urlname": "la9toqncox96kfp8",
        "author": "1874",
        "date": "2023-02-07 09:35:59",
        "updated": "2023-04-05 08:51:36"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "关于Elog",
          "uuid": "5Z1oRyzOg4duQnlJ",
          "url": "",
          "prev_uuid": "",
          "sibling_uuid": "mqnrHmVyj2SptIu-",
          "child_uuid": "jpTcZgfVyKy4YBBY",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    },
    {
      "id": 108094686,
      "doc_id": "xe160pqsumi6bqnz",
      "title": "xe160pqsumi6bqnz",
      "updated": 1683127385000,
      "body_original": "<a name=\"c3aJO\"></a>\n# 按目录存放文档\n<a name=\"gv0nm\"></a>\n## 适用场景\n当在语雀/Notion上管理文章时，需要在生成文档时按目录将文档存放在不同目录，方便部署平台按照目录渲染。<br />例如 Vitepress 一般是按照文件夹生成文档和目录。\n<a name=\"bh8Du\"></a>\n## 如何配置\n<a name=\"hFlmN\"></a>\n### 语雀\n在配置文件中配置`deploy.local.catalog=true`，即可按照语雀目录生成文档。\n<a name=\"sNSX1\"></a>\n### Notion\n\n1. 在 Notion 数据库新增`catalog`字段（单选/多选），设置每篇文档的所在目录信息标签。单选标签下，只能生成一层目录；多选标签下，可生成多级目录，但是需要保证标签的顺序\n2. 在 Notion 写作平台配置项中配置`write.notion.catalog=true`\n3. 在部署平台配置项中配置`deploy.local.catalog=true`\n\n如果想自定义字段，不使用默认的`catalog`字段，则需要设置`write.notion.catalog`为以下格式\n```javascript\nnotion: {\n  token: process.env.NOTION_TOKEN,\n  databaseId: process.env.NOTION_DATABASE_ID,\n  filter: true,\n  sorts: true,\n  catalog: {\n\t\tenable: true,\n\t\tproperty: \"自定义属性\"\n\t}\n}\n```\n> 你也可以不开启按目录存放文档的相关属性，但是依然在 Vitepress 中按目录生成路由，可参考 [Elog Docs 源码](https://github.com/LetTTGACO/elog-docs)。\n\n",
      "properties": {
        "title": "按目录存放文档",
        "urlname": "xe160pqsumi6bqnz",
        "author": "1874",
        "date": "2022-12-02 05:12:49",
        "updated": "2023-05-03 15:23:05"
      },
      "catalog": [
        {
          "title": "进阶玩法",
          "doc_id": "xe160pqsumi6bqnz"
        }
      ],
      "body": ""
    },
    {
      "id": 113663727,
      "doc_id": "cq6p8hxizn1ogwgm",
      "title": "cq6p8hxizn1ogwgm",
      "updated": 1683129953000,
      "body_original": "<a name=\"ZGOn3\"></a>\n# Elog 更新日志\n更新日志见 [Github Releases](https://github.com/LetTTGACO/elog/releases)\n\n更多详情见 [ELog 开发计划](https://1874.notion.site/Elog-91dd2037c9c847e6bc90b712b124189c)\n",
      "properties": {
        "title": "Elog 更新日志",
        "urlname": "cq6p8hxizn1ogwgm",
        "author": "1874",
        "date": "2023-02-07 09:35:09",
        "updated": "2023-05-03 16:05:53"
      },
      "catalog": [
        {
          "title": "关于Elog",
          "doc_id": "cq6p8hxizn1ogwgm"
        }
      ],
      "body": ""
    },
    {
      "id": 108093222,
      "doc_id": "fe8ywmt999gon12w",
      "title": "fe8ywmt999gon12w",
      "updated": 1683129124000,
      "body_original": "<a name=\"XqOKh\"></a>\n# 配置详情\n<a name=\"MqXeu\"></a>\n## 目录结构\n以Hexo的根目录为例：\n```json\n.\n├── public\n├── scaffolds\n├── source\n├── themes\n├── .elog.env\t\t\t\t\t\t// Elog用于本地调试时的环境变量配置\n├── .gitignore\t\t\t\t\t// git忽略文件，请将.elog.env文件加入，防止密码等信息误提交\n├── _config.yml\n├── elog.cache.json\t\t\t// Elog的缓存文件，用于缓存上次同步的文件\n├── elog.config.js\t\t  // Elog的配置文件\n└── package.json\n```\n以下配置都是基于`elog.config.js`来说明\n<a name=\"nq39M\"></a>\n## 完整示例\n```javascript\nmodule.exports = {\n  write: {\n    platform: 'yuque',\n    yuque: {\n      token: process.env.YUQUE_TOKEN,\n      baseUrl: '',\n      login: process.env.YUQUE_LOGIN,\n      repo: process.env.YUQUE_REPO,\n      onlyPublic: false,\n      onlyPublished: true,\n    },\n    notion: {\n      token: process.env.NOTION_TOKEN,\n      databaseId: process.env.NOTION_DATABASE_ID,\n      filter: true, // {property: 'status', select: {equals: '已发布'}}\n      sorts: true, // [{timestamp: 'created_time', direction: 'descending'}],\n      catalog: false\n    },\n  },\n  deploy: {\n    platform: 'local',\n    local: {\n      outputDir: '',\n      filename: '',\n      format: '',\n      catalog: false,\n      formatExt: '',\n    },\n    confluence: {\n      user: process.env.CONFLUENCE_USER,\n      password: process.env.CONFLUENCE_PASSWORD,\n      baseUrl: process.env.CONFLUENCE_BASE_URL,\n      spaceKey: process.env.CONFLUENCE_SPACE_KEY,\n      rootPageId: process.env.CONFLUENCE_ROOT_PAGE_ID, // 可选\n      formatExt: '', // 可选\n    },\n  },\n  image: {\n    enable: false,\n    platform: 'local',\n    local: {\n      outputDir: '',\n      prefixKey: '',\n    },\n    oss: {\n      secretId: process.env.OSS_SECRET_ID,\n      secretKey: process.env.OSS_SECRET_KEY,\n      bucket: process.env.OSS_BUCKET,\n      region: process.env.OSS_REGION,\n      host: process.env.OSS_HOST,\n      prefixKey: '',\n      secretExt: '', // 可选\n    },\n    cos: {\n      secretId: process.env.COS_SECRET_ID,\n      secretKey: process.env.COS_SECRET_KEY,\n      bucket: process.env.COS_BUCKET,\n      region: process.env.COS_REGION,\n      host: process.env.COS_HOST,\n      prefixKey: '',\n      secretExt: '', // 可选\n    },\n    qiniu: {\n      secretId: process.env.QINIU_SECRET_ID,\n      secretKey: process.env.QINIU_SECRET_KEY,\n      bucket: process.env.QINIU_BUCKET,\n      region: process.env.QINIU_REGION,\n      host: process.env.QINIU_HOST,\n      prefixKey: '',\n      secretExt: '', // 可选\n    },\n    upyun: {\n      user: process.env.UPYUN_USER,\n      password: process.env.UPYUN_PASSWORD,\n      bucket: process.env.UPYUN_BUCKET,\n      host: process.env.UPYUN_HOST,\n      prefixKey: '',\n      secretExt: '', // 可选\n    },\n    github: {\n      user: process.env.GITHUB_USER,\n      token: process.env.GITHUB_TOKEN,\n      repo: process.env.GITHUB_REPO,\n      branch: '',\n      host: '',\n      prefixKey: '',\n      secretExt: '', // 可选\n    },\n  },\n}\n```\n<a name=\"afaYW\"></a>\n## 字段说明\n| 字段 | 说明 |\n| --- | --- |\n| write | 写作平台详细配置 |\n| deploy | 部署平台详细配置 |\n| image | 图床平台详情配置 |\n\n<a name=\"srLe4\"></a>\n## 写作平台\n<a name=\"lViPw\"></a>\n### 语雀\n语雀关键信息获取及配置流程请移步 [关键信息获取](/yuque/gvnxobqogetukays#语雀) 页面\n\n| 字段 | 必填 | 说明 | 默认值 |\n| --- | --- | --- | --- |\n| token | 是 | 语雀Token | - |\n| baseUrl | 否 | 语雀API请求的Base Url | https://www.yuque.com/api/v2 |\n| login | 是 | 个人路径/空间ID | - |\n| repo | 是 | 语雀仓库短名称，也称为语雀知识库路径\u0000 | - |\n| onlyPublic | 否 | 是否只获取公开文章 | false |\n| onlyPublished | 否 | 是否只获取已发布文章 | false |\n\n> `baseUrl` 为语雀 API 请求路径\n> 当知识库类型为个人知识库时，无需配置。\n> 当知识库类型为团队知识库时，`baseUrl=https://空间id.yuque.com/api/v2`，`login=空间id`，`repo=空间中的语雀知识库路径`\n\n<a name=\"bO2nz\"></a>\n### Notion\nNotion模版获取、关键信息获取及配置流程请移步 [关键信息获取](/yuque/gvnxobqogetukays#notion) 页面\n\n| 字段 | 必填 | 类型 | 说明 | 默认值 |\n| --- | --- | --- | --- | --- |\n| token | 是 | string | Notion Token |  |\n| databaseId | 是 | string | notion 中的数据库 id | - |\n| filter | 否 | boolean｜object | 过滤条件 | true |\n| sorts | 否 | boolean｜object[] | 排序条件 | true |\n| catalog | 否 | boolean｜object | 目录信息配置 | false |\n\n<a name=\"kBG01\"></a>\n#### Filter 字段说明\n`filter`字段是为了筛选 Notion 数据库文档，表示哪些文章需要被 Elog 下载。\n\n1. 默认值为 true ，即筛选数据库的`status`属性，且属性值为`已发布`，对应 Notion 的筛选规则为：\n```json\n{ \n  property: 'status',\n  select: {\n  \tequals: '已发布'\n\t}\n}\n```\n\n2. 当`filter = false`时，不进行筛选，默认下载数据库所有文档\n3. 当需要自定义筛选时，需要按照Notion的筛选规则进行。具体请参考[Notion API文档 - Filter database entries](https://developers.notion.com/reference/post-database-query-filter)\n<a name=\"bzqhl\"></a>\n#### Sorts 字段说明\n`sorts`字段是为了对 Notion 数据库文档进行排序，以便生成一定顺序的目录信息，**对文档的同步不影响。**<br />例如，使用 VitePress 部署文档时，需要对文档按照指定顺序和结构生成路由和 sidebar\u0000。<br />详情见 [Elog Docs 文档源码](https://github.com/LetTTGACO/elog-docs)\n\n1. elog 提供了一些预设参数，如下。例如`sorts=sortDesc`即按照数据库的 sort 字段进行倒序排列\n```typescript\nexport const enum NotionSortPreset {\n  /** 按自定义日期排序 */\n  dateDesc = 'dateDesc', // 倒序\n  dateAsc = 'dateAsc', // 升序\n  /** 按创建时间排序 */\n  createTimeDesc = 'createTimeDesc', // 倒序\n  createTimeAsc = 'createTimeAsc', // 升序\n  /** 按更新时间排序 */\n  updateTimeDesc = 'updateTimeDesc', // 倒序\n  updateTimeAsc = 'updateTimeAsc', // 升序\n  /** 按数据库的sort字段进行排序 */\n  sortDesc = 'sortDesc', // 倒序\n  sortAsc = 'sortAsc', // 升序\n}\n```\n\n2. 当`sorts=true`或者不填时，默认按照文档创建时间倒序进行排序\n3. 当需要自定义排序时，需要按照Notion的筛选规则进行。具体请参考 [Notion API文档 - Sort database entries](https://developers.notion.com/reference/post-database-query-sort)\n<a name=\"PFMdp\"></a>\n#### Catalog 字段说明\n`catalog`字段是为了配置文档的目录信息，如果需要按照指定目录分类下载时，则需要进行配置，**对文档的同步不影响。**\n\n1.  默认值为`false`，即不记录文档的目录信息 \n2.  当`catalog=true`，则表示按照数据库的`catalog`字段进行记录 \n3.  当需要自定义属性时，则可按照以下格式进行配置 \n```jsx\ncatalog: {\n  enable: true,\n  property: \"自定义属性\"\n}\n```\n\n4.  当需要配置`catalog`字段时，请保证数据库有相关属性存在（支持单选/多选） \n<a name=\"hqjPN\"></a>\n## 部署平台\n<a name=\"EoWPa\"></a>\n### 本地部署（local）\n适用于所有类似 Hexo 的框架：通过向指定目录存放 markdown 文档来进行渲染的博客平台\n\n| 字段 | 必填 | 说明 | 默认值 |\n| --- | --- | --- | --- |\n| outputDir\u0000 | 否 | 文档输出目录 | - |\n| filename\u0000 | 否 | 生成文档的命名格式，取值 urlname｜title | title |\n| format\u0000 | 否 | 适配器，取值 markdown｜matter-markdown｜wiki｜html | markdown |\n| catalog | 否 | 是否按照目录生成文档 | false |\n| formatExt\u0000 | 否 | 自定义文档处理适配器路径 | - |\n\n<a name=\"LAEu1\"></a>\n#### FormatExt 字段说明\n自定义文档处理适配器`.js`文件路径，当需要对文档进一步处理时，可配置此选项\n\n1. 目前只支持 Common Js 标准的处理器\n2. 处理器需要暴露一个**同步**的 `format`\u0000 的方法，**不支持异步方法**\n```javascript\n// 自定义文档处理器\n// doc的类型定义为 DocDetail，详情见下方 DocDetail 类型定义\nconst format = (doc) => {\n\t// ...对文档进行处理\n  const newPost = xxx\n  return newPost\n  \n}\n\nmodule.exports = {\n  format,\n}\n```\n**DocDetail 类型定义如下：**\n```typescript\n/** 文章详情 */\nexport interface DocDetail extends BaseDoc {\n  /** 实际部署时的markdown文档字符串 */\n  body: string\n  /** 原始markdown文档字符串 */\n  body_original: string\n  /** 部署到wiki时会存在 */\n  body_wiki?: string\n  /** html字符串 */\n  body_html?: string\n  /** 文章属性 */\n  properties: DocProperties\n  /** 语雀文章目录路径， Notion暂不支持 */\n  catalog?: YuqueCatalog[]\n}\n\nexport interface BaseDoc {\n  /** 文章唯一ID */\n  id: string\n  /** 文章ID */\n  doc_id: string\n  /** 更新时间，冗余字段 */\n  updated: number\n}\n\n/** 文章属性 */\nexport interface DocProperties {\n  urlname: string\n  title: string\n  date: string\n  updated: string\n  [key: string]: any\n}\n\n/** 语雀知识库目录 */\nexport interface YuqueCatalog {\n  /** 类型：文章/分组 */\n  type: 'DOC' | 'TITLE'\n  title: string\n  uuid: string\n  child_uuid: string\n  parent_uuid: string\n  slug: string\n  depth: number\n  level: number\n}\n\n```\n<a name=\"uQ6Dc\"></a>\n### Confluence\n| 字段 | 必填 | 说明 | 默认值 |\n| --- | --- | --- | --- |\n| baseUrl | 是 | Confluence API 请求 Base Url  | - |\n| spaceKey | 是 | 空间Key | - |\n| rootPageId | 是 | 根页面ID，Elog会把文档统一存到此目录下 | - |\n| user | 是 | Confluence账号 | - |\n| password | 是 | Confluence密码 | - |\n| formatExt | 否 | 自定义文档处理适配器路径，需要符合Confluence格式要求 | - |\n\n<a name=\"XPIRi\"></a>\n## 图床平台\n图床关键信息获取及配置流程请移步 [关键信息获取](/yuque/gvnxobqogetukays#图床) 页面。\n<a name=\"QHTAC\"></a>\n### 本地存储（local）\n| 字段 | 必填 | 说明 | 默认值 |\n| --- | --- | --- | --- |\n| outputDir | 是 | 图片输出目录 | - |\n| prefixKey | 否 | 图片资源统一前缀 | - |\n\n<a name=\"kZo2U\"></a>\n#### PrefixKey 字段说明\n\n1. 本地部署平台一般会有资源根目录，会将某个文件夹视为根目录，而`prefixKey`就是配置资源目录的前缀\n2. 例如 Vitpress，如果`outputDir=./docs/asset/images`，则`prefixKey=/asset/images`\n<a name=\"bIP73\"></a>\n### 腾讯云（cos）/阿里云（oss）/七牛云（qiniu）\n| 字段 | 必填 | 说明 | 默认值 |\n| --- | --- | --- | --- |\n| secretId | 是 | 图床密钥ID | - |\n| secretKey**\u0000** | 是 | 图床密钥KEY | - |\n| bucket\u0000\u0000 | 是 | 桶名称/七牛云空间 | - |\n| region\u0000 | 是 | 存储区域 | - |\n| host | 否 | 指定域名，**七牛云必填** | - |\n| prefixKey | 否 | 上传路径，默认上传到根路径 | - |\n| secretExt | 否 | 图床密钥拓展点 | - |\n\n<a name=\"RxfRV\"></a>\n### 又拍云（upyun）\n| 字段 | 必填 | 说明 | 默认值 |\n| --- | --- | --- | --- |\n| user**\u0000** | 是 | 操作员账号 | - |\n| password | 是 | 操作员密码 | - |\n| bucket | 是 | 地区 | - |\n| host | 否 | 指定域名，又拍云会默认提供30天的临时测试域名，建议配置自定义域名 | 临时域名：http://xxx.est.upcdn.net |\n| prefixKey | 否 | 上传路径，默认上传到根路径 | - |\n| secretExt | 否 | 图床密钥拓展点 | - |\n\n<a name=\"n7Yzh\"></a>\n### Github图床（github）\n| 字段 | 必填 | 说明 | 默认值 |\n| --- | --- | --- | --- |\n| token\u0000 | 是 | Github Token | - |\n| user\u0000 | 是 | 用户名 | - |\n| repo\u0000 | 是 | 仓库名 | - |\n| branch | 否 | 分支 | master |\n| host | 否 | 加速域名，取值 cdn.jsdelivr.net\u0000 | - |\n| prefixKey | 否 | 上传路径，默认上传到根路径 | - |\n| secretExt | 否 | 图床密钥拓展点 | - |\n\n<a name=\"RAyx4\"></a>\n### secretExt 字段说明\n图床密钥拓展点路径，一般适用于不想直接配置AK到环境变量或者本地，而是通过异步接口获取\n\n1. 目前只支持 Common Js 标准拓展点\n2. 拓展点需要暴露一个**同步/异步**的 `getSecret`\u0000\u0000 的方法\n```typescript\nconst axios = require('axios');\n\nconst getOssSts = async () => {\n  return await axios.get('https://xxxx/oss/sts?directory=elog')\n}\n\nconst getSecret = async () => {\n  const res = await getOssSts()\n  const { accessKeyId, accessKeySecret, securityToken, dir, region, bucket } = res.data.data\n  return {\n    secretId: accessKeyId,\n    secretKey: accessKeySecret,\n    stsToken: securityToken,\n    secure: true,\n    prefixKey: dir,\n    region,\n    bucket,\n  }\n}\n\nmodule.exports = {\n  getSecret,\n}\n\n```\n\n3. `getSecret` 返回的密钥信息需要符合图床实例SDK的字段要求，具体请参考对应图床 SDK/API\n<a name=\"JJkG0\"></a>\n### 环境变量配置\n\n1. 当 Elog 配置文件为 Js 类型时，可在配置文件中通过`process.env.xxx`自定义环境变量。\n2. 当 ELog 配置文件为 Json 类型时，Elog会优先从配置文件中获取，如果获取不到，则会从环境变量中获取。Elog 默认只会读取以下环境变量值：\n| Key | Value |\n| --- | --- |\n| YUQUE_TOKEN\u0000 | 语雀Token |\n| NOTION_TOKEN\u0000 | Notion Token |\n| CONFLUENCE_USER\u0000 | Confluence账号 |\n| CONFLUENCE_PWD\u0000 | Confluence密码 |\n| GITHUB_TOKEN\u0000 | Github Token |\n| COS_SECRET_ID | 腾讯云COS的secretId |\n| COS_SECRET_KEY | 腾讯云COS的secretKey |\n| OSS_SECRET_ID | 阿里云OSS的AccessKey ID |\n| OSS_SECRET_KEY | 阿里云OSS的AccessKey Secret |\n| QINIU_SECRET_ID | 七牛云的AccessKey |\n| QINIU_SECRET_KEY | 七牛云的SecretKey |\n| UPYUN_SECRET_ID | 又拍云的操作员账号 |\n| UPYUN_SECRET_KEY | 又拍云的操作员密码 |\n\n⚠️ 为了安全，在实际配置中请不要将敏感信息写在配置文件中，Elog提供了更优雅的本地调试方式。\n<a name=\"IsFPH\"></a>\n## 本地调试\n为了方便本地调试，Elog 支持从本地文件中获取环境变量。只需要在部署平台根目录新增`.elog.env`文件，将用到的配置写入，然后在执行同步命令时指定环境变量文件即可。\n```bash\nelog sync -e .elog.env\n```\n```bash\n# 语雀\nYUQUE_TOKEN=\nYUQUE_LOGIN=\nYUQUE_REPO=\n\n# Notion\nNOTION_TOKEN=\nNOTION_DATABASE_ID=\n\n# Confluence\nCONFLUENCE_BASE_URL=\nCONFLUENCE_USER=\nCONFLUENCE_PASSWORD=\nCONFLUENCE_SPACE_KEY=\nCONFLUENCE_ROOT_PAGE_ID=\n\n# 腾讯云\nCOS_SECRET_ID=\nCOS_SECRET_KEY=\nCOS_BUCKET=\nCOS_REGION=\nCOS_HOST=\n\n# 阿里云\nOSS_SECRET_ID=\nOSS_SECRET_KEY=\nOSS_BUCKET=\nOSS_REGION=\nOSS_HOST=\n\n# 七牛云\nQINIU_SECRET_ID=\nQINIU_SECRET_KEY=\nQINIU_BUCKET=\nQINIU_REGION=\nQINIU_HOST=\n\n# 又拍云\nUPYUN_USER=\nUPYUN_PASSWORD=\nUPYUN_BUCKET=\nUPYUN_HOST=xxx.xx.upaiyun.com\n\n# Github\nGITHUB_USER=\nGITHUB_TOKEN=\nGITHUB_REPO=\n```\n> ⚠️  **注意：请将**`**.elog.env**`**文件加入 **`**.gitignore**`** ，防止误提交到git仓库**\n\n<a name=\"YH4rS\"></a>\n## 线上部署\n线上部署时，只需要提前将以上用到的信息配置到环境变量上即可。<br />以 Github 为例，可以在仓库的`设置-Secrets and variables-Actions-Secrets`中进行配置，然后在流水线中注入即可。\n",
      "properties": {
        "title": "配置详情",
        "urlname": "fe8ywmt999gon12w",
        "author": "1874",
        "date": "2022-12-02 04:45:52",
        "updated": "2023-05-03 15:52:04"
      },
      "catalog": [
        {
          "title": "入门指引",
          "doc_id": "fe8ywmt999gon12w"
        }
      ],
      "body": ""
    },
    {
      "id": 107712908,
      "doc_id": "start",
      "title": "start",
      "updated": 1682446267000,
      "body_original": "<a name=\"B7QWB\"></a>\n# 快速开始\n<a name=\"liSqu\"></a>\n## 环境准备\nElog 项目基于 Node，请确保已具备较新的 Node 环境（>=12.0.0）\n<a name=\"CRzFC\"></a>\n## CLI 工具安装\n首先，你需要使用 npm / yarn / pnpm 全局安装`@elog/cli`\n```bash\n# 使用 npm 安装 CLI\nnpm install @elog/cli -g\n\n# 使用 yarn 安装 CLI\nyarn global add @elog/cli\n\n# 使用 pnpm 安装 CLI\npnpm install @elog/cli -g\n```\n<a name=\"nAkAE\"></a>\n## 初始化\n你需要拥有一个 Hexo/Vitepress/HuGo 的项目，进入部署平台根目录下，这里以 Hexo 举例，使用命令进行初始化：\n```bash\nelog init\n```\n根据提示初始化成功后，会在根目录生成一份`elog.config.js` 配置文件和本地调试用的`.elog.env`环境变量配置文件。你需要修改一些配置才能进行下一步，详情移步 [配置详情](/yuque/fe8ywmt999gon12w) 页面。\n<a name=\"x5WJs\"></a>\n## 开始同步\n在根目录下，执行同步命令：\n```bash\nelog sync\n```\n![image.png](https://cdn.nlark.com/yuque/0/2023/png/417081/1676134325854-6abceadf-fd39-4158-80ca-dce0718662fe.png#averageHue=%2351b082&clientId=ucbf80922-3f89-4&from=paste&height=757&id=u502be399&originHeight=1514&originWidth=2290&originalType=binary&ratio=2&rotation=0&showTitle=false&size=831768&status=done&style=none&taskId=u783c3b6f-25d9-42b3-a046-1454e949330&title=&width=1145)\n",
      "properties": {
        "title": "快速开始",
        "urlname": "start",
        "author": "1874",
        "date": "2022-11-29 05:40:54",
        "updated": "2023-04-25 18:11:07"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "入门指引",
          "uuid": "mqnrHmVyj2SptIu-",
          "url": "",
          "prev_uuid": "5Z1oRyzOg4duQnlJ",
          "sibling_uuid": "IRlxU8BN3QGe27pc",
          "child_uuid": "bYYqP0FNnLjeZlYM",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    },
    {
      "id": 107712840,
      "doc_id": "introduce",
      "title": "introduce",
      "updated": 1682142528000,
      "body_original": "<a name=\"eJ8LG\"></a>\n# Elog 能干什么\n<a name=\"nI2nj\"></a>\n## 介绍\n`Elog`名为 `Easy Blogging`，简单、轻松的书写&部署博客\n<a name=\"cUNb9\"></a>\n## 前言\n在遇到Elog之前，你的博客可能是\n\n- 本地编辑器书写 + Hexo/Hugo/Vitepress部署\n- 语雀记录\n- Notion记录和发布\n- WordPress在线书写和发布\n- Github记录\n- 掘金/知乎等在线平台记录\n\n可以发现，大部分博客平台要么自己提供在线编辑器，要么就让用户本地书写再进行进行部署。<br />可惜目前好用的编辑器大都都不是博客平台自己提供的，而是一些第三方编辑器，例如\n\n- Notion：出色的数据库设计，灵活度非常高\n- 语雀：阿里出品，笔者觉得很不错的一款在线编辑器，涵盖日常个人、工作所需要的各种场景，够用\n- Typora：一款出色的本地编辑器，支持实时预览和流程书写，可惜新版本收费了\n> 语雀最近限制了【互联网公开】的权限，需要会员才能使用，所以对于一些想直接把语雀当成博客站点的用户变得不太友好。好在API目前还不受限制，可以稳定使用。\n\n而博客平台一般分为两类，一种是轻量化的，只负责渲染文档不提供编辑器，代表产品：\n\n- Hexo\n- Vitepress\n- HuGo\n\n一种是内容管理系统软件，相对上面这些比较重，初期涉及到数据库和手动部署，拥有自己的编辑器，代表产品\n\n- WordPress\n- GHost\n<a name=\"SNlEi\"></a>\n## Elog\n如果我既想用最熟悉、最舒适的编辑器，又想用主流的博客平台，怎么办呢？<br />Elog就是为了解决这个问题而诞生的。<br />Elog将这些平台揉合在一起，你可以随意组合写作平台和部署平台，目前支持<br />**写作平台：**\n\n- [x] Notion\n- [x] 语雀\n\n**部署平台**\n\n- [x] Hexo\n- [x] Vitepress\n- [x] HuGo\n- [x] Docusaurus\n- [x] Docz\n- [x] Confluence\n> 部署平台目前支持所有类似 Hexo 的框架：通过向指定目录存放 markdown 文档来进行渲染的方式\n\n<a name=\"bvu56\"></a>\n## 图床功能\n和很多在线平台一样，Notion和语雀也同样存在图片防盗链的问题，直接将写作平台的图片链接放到其他站点的话，会加载不出来。<br />为了解决这个问题，Elog支持了在生成MD文件之前，将扫描到的图片上传到图床上，并对文档中的图片链接进行替换。<br />当前支持的图床有\n\n- [x] 腾讯云COS\n- [x] 阿里云OSS\n- [x] Github图床\n- [x] 七牛云\n- [x] 又拍云\n\n\n\n",
      "properties": {
        "title": "Elog 能干什么",
        "urlname": "introduce",
        "author": "1874",
        "date": "2022-11-29 05:40:18",
        "updated": "2023-04-22 05:48:48"
      },
      "catalog": [
        {
          "type": "TITLE",
          "title": "关于Elog",
          "uuid": "5Z1oRyzOg4duQnlJ",
          "url": "",
          "prev_uuid": "",
          "sibling_uuid": "mqnrHmVyj2SptIu-",
          "child_uuid": "jpTcZgfVyKy4YBBY",
          "parent_uuid": "",
          "doc_id": "",
          "level": 0,
          "id": "",
          "open_window": 1,
          "visible": 1,
          "depth": 1,
          "slug": "#"
        }
      ],
      "body": ""
    }
  ],
  "catalog": [
    {
      "type": "TITLE",
      "title": "关于Elog",
      "uuid": "5Z1oRyzOg4duQnlJ",
      "url": "",
      "prev_uuid": "",
      "sibling_uuid": "mqnrHmVyj2SptIu-",
      "child_uuid": "jpTcZgfVyKy4YBBY",
      "parent_uuid": "",
      "doc_id": "",
      "level": 0,
      "id": "",
      "open_window": 1,
      "visible": 1,
      "depth": 1,
      "slug": "#"
    },
    {
      "type": "DOC",
      "title": "Elog 能干什么",
      "uuid": "jpTcZgfVyKy4YBBY",
      "url": "introduce",
      "prev_uuid": "5Z1oRyzOg4duQnlJ",
      "sibling_uuid": "LRnmwXl8VY07hYnh",
      "child_uuid": "",
      "parent_uuid": "5Z1oRyzOg4duQnlJ",
      "doc_id": 107712840,
      "level": 1,
      "id": 107712840,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "introduce"
    },
    {
      "type": "DOC",
      "title": "Features",
      "uuid": "LRnmwXl8VY07hYnh",
      "url": "zuzvbv2lqhvllgit",
      "prev_uuid": "jpTcZgfVyKy4YBBY",
      "sibling_uuid": "8hOlOfsfjQYSIjjY",
      "child_uuid": "",
      "parent_uuid": "5Z1oRyzOg4duQnlJ",
      "doc_id": 113665139,
      "level": 1,
      "id": 113665139,
      "open_window": 1,
      "visible": 1,
      "depth": 2,
      "slug": "zuzvbv2lqhvllgit"
    },
    {
      "type": "DOC",
      "title": "Elog 更新日志",
      "uuid": "8hOlOfsfjQYSIjjY",
      "url": "cq6p8hxizn1ogwgm",
      "prev_uuid": "LRnmwXl8VY07hYnh",
      "sibling_uuid": "ZfN4i2eB_NsN102V",
      "child_uuid": "",
      "parent_uuid": "5Z1oRyzOg4duQnlJ",
      "doc_id": 113663727,
      "level": 1,
      "id": 113663727,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "cq6p8hxizn1ogwgm"
    },
    {
      "type": "DOC",
      "title": "沟通与反馈",
      "uuid": "ZfN4i2eB_NsN102V",
      "url": "la9toqncox96kfp8",
      "prev_uuid": "8hOlOfsfjQYSIjjY",
      "sibling_uuid": "",
      "child_uuid": "",
      "parent_uuid": "5Z1oRyzOg4duQnlJ",
      "doc_id": 113663948,
      "level": 1,
      "id": 113663948,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "la9toqncox96kfp8"
    },
    {
      "type": "TITLE",
      "title": "入门指引",
      "uuid": "mqnrHmVyj2SptIu-",
      "url": "",
      "prev_uuid": "5Z1oRyzOg4duQnlJ",
      "sibling_uuid": "IRlxU8BN3QGe27pc",
      "child_uuid": "bYYqP0FNnLjeZlYM",
      "parent_uuid": "",
      "doc_id": "",
      "level": 0,
      "id": "",
      "open_window": 1,
      "visible": 1,
      "depth": 1,
      "slug": "#"
    },
    {
      "type": "DOC",
      "title": "快速开始",
      "uuid": "bYYqP0FNnLjeZlYM",
      "url": "start",
      "prev_uuid": "mqnrHmVyj2SptIu-",
      "sibling_uuid": "gOgF1H4SqpHzb7UO",
      "child_uuid": "",
      "parent_uuid": "mqnrHmVyj2SptIu-",
      "doc_id": 107712908,
      "level": 1,
      "id": 107712908,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "start"
    },
    {
      "type": "DOC",
      "title": "配置详情",
      "uuid": "gOgF1H4SqpHzb7UO",
      "url": "fe8ywmt999gon12w",
      "prev_uuid": "bYYqP0FNnLjeZlYM",
      "sibling_uuid": "I8CjT1JSywVxa8X4",
      "child_uuid": "",
      "parent_uuid": "mqnrHmVyj2SptIu-",
      "doc_id": 108093222,
      "level": 1,
      "id": 108093222,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "fe8ywmt999gon12w"
    },
    {
      "type": "DOC",
      "title": "关键信息获取",
      "uuid": "I8CjT1JSywVxa8X4",
      "url": "gvnxobqogetukays",
      "prev_uuid": "gOgF1H4SqpHzb7UO",
      "sibling_uuid": "iGeJmpy-GdWzUrB3",
      "child_uuid": "",
      "parent_uuid": "mqnrHmVyj2SptIu-",
      "doc_id": 113906683,
      "level": 1,
      "id": 113906683,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "gvnxobqogetukays"
    },
    {
      "type": "DOC",
      "title": "CLI 命令",
      "uuid": "iGeJmpy-GdWzUrB3",
      "url": "bry3d3lwe206xuor",
      "prev_uuid": "I8CjT1JSywVxa8X4",
      "sibling_uuid": "z_0X6jh9moMe9yCN",
      "child_uuid": "",
      "parent_uuid": "mqnrHmVyj2SptIu-",
      "doc_id": 113693555,
      "level": 1,
      "id": 113693555,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "bry3d3lwe206xuor"
    },
    {
      "type": "DOC",
      "title": "示例配置",
      "uuid": "z_0X6jh9moMe9yCN",
      "url": "te7ash7ybckgi60w",
      "prev_uuid": "iGeJmpy-GdWzUrB3",
      "sibling_uuid": "",
      "child_uuid": "",
      "parent_uuid": "mqnrHmVyj2SptIu-",
      "doc_id": 113927217,
      "level": 1,
      "id": 113927217,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "te7ash7ybckgi60w"
    },
    {
      "type": "TITLE",
      "title": "功能和API适配情况",
      "uuid": "IRlxU8BN3QGe27pc",
      "url": "",
      "prev_uuid": "mqnrHmVyj2SptIu-",
      "sibling_uuid": "lyiqodb0OvCLERDP",
      "child_uuid": "I27Jt1Utz-2VDG-o",
      "parent_uuid": "",
      "doc_id": "",
      "level": 0,
      "id": "",
      "open_window": 1,
      "visible": 1,
      "depth": 1,
      "slug": "#"
    },
    {
      "type": "DOC",
      "title": "语雀-Markdown",
      "uuid": "I27Jt1Utz-2VDG-o",
      "url": "yuque-markdown",
      "prev_uuid": "IRlxU8BN3QGe27pc",
      "sibling_uuid": "3pB2syLXWB1aQXff",
      "child_uuid": "",
      "parent_uuid": "IRlxU8BN3QGe27pc",
      "doc_id": 117967328,
      "level": 1,
      "id": 117967328,
      "open_window": 1,
      "visible": 1,
      "depth": 2,
      "slug": "yuque-markdown"
    },
    {
      "type": "DOC",
      "title": "语雀示例文章",
      "uuid": "3pB2syLXWB1aQXff",
      "url": "yuque-example",
      "prev_uuid": "I27Jt1Utz-2VDG-o",
      "sibling_uuid": "QgRZrnNVasTxZNK4",
      "child_uuid": "",
      "parent_uuid": "IRlxU8BN3QGe27pc",
      "doc_id": 122903263,
      "level": 1,
      "id": 122903263,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "yuque-example"
    },
    {
      "type": "DOC",
      "title": "Notion-Markdown",
      "uuid": "QgRZrnNVasTxZNK4",
      "url": "notion-markdown",
      "prev_uuid": "3pB2syLXWB1aQXff",
      "sibling_uuid": "6kdipu5_TupYyiBv",
      "child_uuid": "",
      "parent_uuid": "IRlxU8BN3QGe27pc",
      "doc_id": 123208837,
      "level": 1,
      "id": 123208837,
      "open_window": 1,
      "visible": 1,
      "depth": 2,
      "slug": "notion-markdown"
    },
    {
      "type": "DOC",
      "title": "Notion示例文章",
      "uuid": "6kdipu5_TupYyiBv",
      "url": "notion-example",
      "prev_uuid": "QgRZrnNVasTxZNK4",
      "sibling_uuid": "",
      "child_uuid": "",
      "parent_uuid": "IRlxU8BN3QGe27pc",
      "doc_id": 122903274,
      "level": 1,
      "id": 122903274,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "notion-example"
    },
    {
      "type": "TITLE",
      "title": "进阶玩法",
      "uuid": "lyiqodb0OvCLERDP",
      "url": "",
      "prev_uuid": "IRlxU8BN3QGe27pc",
      "sibling_uuid": "M8ZIXs2Fu5_wwl7x",
      "child_uuid": "PodABt8fdN6YOzWq",
      "parent_uuid": "",
      "doc_id": "",
      "level": 0,
      "id": "",
      "open_window": 1,
      "visible": 1,
      "depth": 1,
      "slug": "#"
    },
    {
      "type": "DOC",
      "title": "Front Matter",
      "uuid": "PodABt8fdN6YOzWq",
      "url": "raqyleng501h23p1",
      "prev_uuid": "lyiqodb0OvCLERDP",
      "sibling_uuid": "GFB9vN2HAvU5ypOT",
      "child_uuid": "",
      "parent_uuid": "lyiqodb0OvCLERDP",
      "doc_id": 113891385,
      "level": 1,
      "id": 113891385,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "raqyleng501h23p1"
    },
    {
      "type": "DOC",
      "title": "按目录存放文档",
      "uuid": "GFB9vN2HAvU5ypOT",
      "url": "xe160pqsumi6bqnz",
      "prev_uuid": "PodABt8fdN6YOzWq",
      "sibling_uuid": "bril42Wm2oE7t9e2",
      "child_uuid": "",
      "parent_uuid": "lyiqodb0OvCLERDP",
      "doc_id": 108094686,
      "level": 1,
      "id": 108094686,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "xe160pqsumi6bqnz"
    },
    {
      "type": "DOC",
      "title": "持续集成",
      "uuid": "bril42Wm2oE7t9e2",
      "url": "vy55q9xwlqlsfrvk",
      "prev_uuid": "GFB9vN2HAvU5ypOT",
      "sibling_uuid": "",
      "child_uuid": "",
      "parent_uuid": "lyiqodb0OvCLERDP",
      "doc_id": 114442049,
      "level": 1,
      "id": 114442049,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "vy55q9xwlqlsfrvk"
    },
    {
      "type": "TITLE",
      "title": "社区生态",
      "uuid": "M8ZIXs2Fu5_wwl7x",
      "url": "",
      "prev_uuid": "lyiqodb0OvCLERDP",
      "sibling_uuid": "",
      "child_uuid": "AXqI0yA4DwjHEnMy",
      "parent_uuid": "",
      "doc_id": "",
      "level": 0,
      "id": "",
      "open_window": 1,
      "visible": 1,
      "depth": 1,
      "slug": "#"
    },
    {
      "type": "DOC",
      "title": "最佳实践",
      "uuid": "AXqI0yA4DwjHEnMy",
      "url": "ubcut43kgf97fag6",
      "prev_uuid": "M8ZIXs2Fu5_wwl7x",
      "sibling_uuid": "",
      "child_uuid": "",
      "parent_uuid": "M8ZIXs2Fu5_wwl7x",
      "doc_id": 113938704,
      "level": 1,
      "id": 113938704,
      "open_window": 0,
      "visible": 1,
      "depth": 2,
      "slug": "ubcut43kgf97fag6"
    }
  ]
}